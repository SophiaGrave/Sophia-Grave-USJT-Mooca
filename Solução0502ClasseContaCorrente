public class ContaCorrente {
    private int numero;
    private int digito;
    private Agencia agencia;
    private double saldo;

    // Construtor que inicializa os atributos
    public ContaCorrente(int numero, int digito, Agencia agencia, double saldoInicial) {
        if (numero < 0 || numero > 9999) {
            throw new IllegalArgumentException("Número da conta deve ser positivo e ter no máximo 4 dígitos.");
        }
        if (digito < 0 || digito > 9) {
            throw new IllegalArgumentException("Dígito da conta deve ser entre 0 e 9.");
        }
        this.numero = numero;
        this.digito = digito;
        this.agencia = agencia;
        this.saldo = saldoInicial;
    }

    // Métodos de acesso (Getters)
    public int getNumero() {
        return numero;
    }

    public int getDigito() {
        return digito;
    }

    public Agencia getAgencia() {
        return agencia;
    }

    public double getSaldo() {
        return saldo;
    }

    // Métodos modificadores (Setters)
    public void setNumero(int numero) {
        if (numero >= 0 && numero <= 9999) {
            this.numero = numero;
        } else {
            throw new IllegalArgumentException("Número da conta deve ser positivo e ter no máximo 4 dígitos.");
        }
    }

    public void setDigito(int digito) {
        if (digito >= 0 && digito <= 9) {
            this.digito = digito;
        } else {
            throw new IllegalArgumentException("Dígito da conta deve ser entre 0 e 9.");
        }
    }

    public void setAgencia(Agencia agencia) {
        this.agencia = agencia;
    }

    // Método para depositar um valor na conta
    public void depositar(double valor) {
        if (valor > 0) {
            saldo += valor;
        } else {
            System.out.println("O valor do depósito deve ser positivo.");
        }
    }

    // Método para sacar um valor da conta
    public double sacar(double valor) {
        if (valor <= saldo) {
            saldo -= valor;
            return valor;
        } else {
            System.out.println("Saque não efetuado. Saldo insuficiente.");
            return 0;
        }
    }

    // Método para consultar o saldo
    public double consultarSaldo() {
        return saldo;
    }

    // Método para imprimir o saldo e informações da conta
    public void imprimirSaldo() {
        System.out.printf("Conta: %04d-%d | Agência: %04d-%d | Saldo: %.2f%n", 
            numero, digito, agencia.getNumero(), agencia.getDigito(), saldo);
    }
}
